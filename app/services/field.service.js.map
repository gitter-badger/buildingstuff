{"version":3,"sources":["services/field.service.ts"],"names":["FieldService","FieldService.constructor","FieldService.getFields","FieldService.getField"],"mappings":";;;;;;;;;;;QAGM,MAAM;;;;;;;YAAN,MAAM,GAAY;gBACtB,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,YAAY,EAAE;aAClC,CAAC;YAEF;gBAAAA;gBAUAC,CAACA;gBARCD,gCAASA,GAATA;oBACEE,MAAMA,CAACA,OAAOA,CAACA,OAAOA,CAACA,MAAMA,CAACA,CAACA;gBACjCA,CAACA;gBAEDF,+BAAQA,GAARA,UAASA,EAAUA;oBACjBG,MAAMA,CAACA,OAAOA,CAACA,OAAOA,CAACA,MAAMA,CAACA;yBAC3BA,IAAIA,CAACA,UAAAA,MAAMA,IAAIA,OAAAA,MAAMA,CAACA,MAAMA,CAACA,UAAAA,CAACA,IAAIA,OAAAA,CAACA,CAACA,EAAEA,KAAKA,EAAEA,EAAXA,CAAWA,CAACA,CAACA,CAACA,CAACA,EAAlCA,CAAkCA,CAACA,CAACA;gBACxDA,CAACA;gBATHH;oBAACA,iBAAUA,EAAEA;;iCAUZA;gBAADA,mBAACA;YAADA,CAVA,AAUCA,IAAA;YAVD,uCAUC,CAAA","file":"services/field.service.js","sourcesContent":["import {Injectable} from \"angular2/core\";\nimport {Field} from \"../models/field\";\n\nconst FIELDS: Field[] = [\n  { \"id\": 1, \"name\": \"Some Field\" }\n];\n\n@Injectable()\nexport class FieldService {\n  getFields() {\n    return Promise.resolve(FIELDS);\n  }\n\n  getField(id: number) {\n    return Promise.resolve(FIELDS)\n      .then(fields => fields.filter(f => f.id === id)[0]);\n  }\n}"],"sourceRoot":"/source/"}